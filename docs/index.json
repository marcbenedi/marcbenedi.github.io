
    
    
    
    
    
    
    
    
    [{"authors":null,"categories":null,"content":" üëã Hola! Hello! Hallo! I am a PhD candidate at Matthias Nie√üner‚Äôs Visual Computing Group, at the Technical University of Munich.\nI‚Äôm interested in computer vision, deep learning and optimization. My research is mostly focused on robust correspondence estimation for rigid 3D reconstruction.\nBefore joining the group, I received a Master‚Äôs Degree in Computer Science from the Technical University of Munich and a Bachelor‚Äôs Degree in Computer Science from the Polytechnical University of Catalonia.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"üëã Hola! Hello! Hallo! I am a PhD candidate at Matthias Nie√üner‚Äôs Visual Computing Group, at the Technical University of Munich.\nI‚Äôm interested in computer vision, deep learning and optimization.","tags":null,"title":"Marc Bened√≠ San Mill√°n","type":"authors"},{"authors":[],"categories":[],"content":"Visit this link for more information: https://niessner.github.io/3DScanning/\n","date":1696684229,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1696684229,"objectID":"4f712b2e7a0771fb287be2ad70d796a2","permalink":"https://marcb.pro/teaching/3d_scanning_motion_capture/","publishdate":"2023-10-07T15:10:29+02:00","relpermalink":"/teaching/3d_scanning_motion_capture/","section":"teaching","summary":"Winter Semester 23/24","tags":[],"title":"3D Scanning \u0026 Motion Capture (IN2354)","type":"teaching"},{"authors":[],"categories":[],"content":" Table of Contents The problem Advantages üßë‚Äçüíª The easy solution: VSCode on the web! üë∑ The complex solution: Start your own sshd process Step 1: Create the SSH keys Step 2: sshd Slurm job Step 3: Test the connection Step 4: Connect your IDE Step 5: Remember to end the sshd process üìë References Although I don‚Äôt use Visual Studio Code[1] as a code editor (I use Neovim[2] ü¶∏), many colleagues use it as their primary editor.\n(The solution presented here also works for PyCharm[4]!)\nThe problem To develop in our Slurm[3] cluster, the users connect the VSCode to the ‚ÄúLogin node‚Äù which starts the vscode-server process.\nThis is not a problem by itself, but when many users do it simultaneously, it starts to consume many resources in a machine that should only be used to manage Slurm jobs.\nAdditionally, this setup only allows for editing the code, not for executing (or at least I hope they are not running code in the ‚ÄúLogin node‚Äù ü§û) or even debugging.\nThe Login Node is full of vscode-server processes from many users taking 30GB of memory! Advantages In the following sections, I will explain how to run VSCode inside Slurm[3].\nThis solves the problem of adding load to the login node. Additionally, since the code editor process will live inside a Slurm job, we will be able to debug and run code directly in the job. That‚Äôs very convenient!\nüßë‚Äçüíª The easy solution: VSCode on the web! This solution is super simple to set up! It consists of running code-server[5] as a Slurm job and accessing it through the web browser.\nFirst, we need to install the binary in our system. There are many options for that, so just pick up the most convenient for you. See the list of options here. In my case, I choose the Standalone release and put the binary in my path.\nSecond, we will create a job file, for example code-server.job, with the following content:\n#!/bin/bash #SBATCH --job-name=code-server #SBATCH --time=04:00:00 #SBATCH --output=%x_%j_%N.log #SBATCH --mem=8gb #SBATCH --gpus=1 #SBATCH --cpus-per-task=4 #SBATCH -p submit PASSWORD=1234 # TODO: Change to secure password PORT=$(python -c \u0026#39;import socket; s=socket.socket(); s.bind((\u0026#34;\u0026#34;, 0)); print(s.getsockname()[1]); s.close()\u0026#39;) echo \u0026#34;********************************************************************\u0026#34; echo \u0026#34;Starting code-server in Slurm\u0026#34; echo \u0026#34;Environment information:\u0026#34; echo \u0026#34;Date:\u0026#34; $(date) echo \u0026#34;Allocated node:\u0026#34; $(hostname) echo \u0026#34;Node IP:\u0026#34; $(ip a | grep 131.159) echo \u0026#34;Path:\u0026#34; $(pwd) echo \u0026#34;Password to access VSCode:\u0026#34; $PASSWORD echo \u0026#34;Listening on:\u0026#34; $PORT echo \u0026#34;********************************************************************\u0026#34; PASSWORD=$PASSWORD code-server --bind-addr 0.0.0.0:$PORT --auth password --disable-telemetry ‚ùó Remember to change the password! ‚ùó\nFinally, once the job has started, we can open the editor using any web browser and navigating to the IP of the node and the PORT.\nThat‚Äôs it!\nIf the node is not accessible from the Internet, use port-forwarding https://coder.com/docs/code-server/latest/guide#port-forwarding-via-ssh.\nüë∑ The complex solution: Start your own sshd process If you are up for a more complex solution or use other IDEs like PyCharm, you can use the next configuration. It involves starting sshd in a Slurm job and then connecting our IDEs to the new process (instead of the global sshd process).\nStep 1: Create the SSH keys ssh-keygen -t rsa -f .ssh/vcg_cluster_user_sshd Then, copy the generated keys to the login node. (We assume here that the user‚Äôs home directories are accessible on all nodes).\nStep 2: sshd Slurm job Copy the following content to a new file such as sshd.job.\n#!/bin/bash #SBATCH --job-name=sshd #SBATCH --time=04:00:00 #SBATCH --output=%x_%j_%N.log #SBATCH --mem=8gb #SBATCH --gpus=1 #SBATCH --cpus-per-task=4 #SBATCH -p submit PORT=$(python -c \u0026#39;import socket; s=socket.socket(); s.bind((\u0026#34;\u0026#34;, 0)); print(s.getsockname()[1]); s.close()\u0026#39;) echo \u0026#34;********************************************************************\u0026#34; echo \u0026#34;Starting sshd in Slurm as user\u0026#34; echo \u0026#34;Environment information:\u0026#34; echo \u0026#34;Date:\u0026#34; $(date) echo \u0026#34;Allocated node:\u0026#34; $(hostname) echo \u0026#34;Node IP:\u0026#34; $(ip a | grep 131.159) echo \u0026#34;Path:\u0026#34; $(pwd) echo \u0026#34;Listening on:\u0026#34; $PORT echo \u0026#34;********************************************************************\u0026#34; /usr/sbin/sshd -D -p ${PORT} -f /dev/null -h ${HOME}/.ssh/vcg_cluster_user_sshd Step 3: Test the connection At this point, you should be able to connect using ssh to the Slurm job.\nssh user@node -p \u0026lt;PORT where the server started\u0026gt; -i ~/.ssh/vcg_cluster_user_sshd Notice that the ssh session can only see the resources allocated to the job (for example the gpus).\nStep 4: Connect your IDE Finally, use your IDEs ‚ÄúRemote Connection‚Äù feature to connect to the job.\nStep 5: Remember to end the sshd process It is important to cancel the Slurm job when we don‚Äôt need the sshd listening anymore.\nüìë References [1]: https://code.visualstudio.com/\n[2]: https://www.lunarvim.org/\n[3]: https://slurm.schedmd.com/\n[4]: https://www.jetbrains.com/help/pycharm/getting-started.html\n[5]: ‚Ä¶","date":1691413829,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1691413829,"objectID":"54309b017a1d0dbe44e3ffc7e91bd44e","permalink":"https://marcb.pro/post/vscode-slurm/","publishdate":"2023-08-07T15:10:29+02:00","relpermalink":"/post/vscode-slurm/","section":"post","summary":"Table of Contents The problem Advantages üßë‚Äçüíª The easy solution: VSCode on the web! üë∑ The complex solution: Start your own sshd process Step 1: Create the SSH keys Step 2: sshd Slurm job Step 3: Test the connection Step 4: Connect your IDE Step 5: Remember to end the sshd process üìë References Although I don‚Äôt use Visual Studio Code[1] as a code editor (I use Neovim[2] ü¶∏), many colleagues use it as their primary editor.","tags":["Slurm","VSCode","PyCharm"],"title":"Using VSCode in Slurm","type":"post"},{"authors":[],"categories":[],"content":"We present an end-to-end learnable, differentiable method for pairwise relative pose registration of RGB-D frames. Our method is robust to big camera motions thanks to a self-supervised weighting of the predicted correspondences between the frames. Given a pair of frames, our method estimates matches of points and their visibility score. A self-supervised model predicts a confidence weight for visible matches. Finally, visible matches and their weight are fed into a differentiable weighted Procrustes aligner which estimates the rigid transformation between the input frames.\nPipeline of our method. Given a pair of RGB-D images, $I1, D1 I2, D2$, we estimate the relative pose between these frames as $R \\in SO(3)$ and $t \\in R^3$ . First, $I1, I2$ are fed into the Correspondence and visibility prediction component, the visible predicted correspondences are weighted in the Correspondence Weighting component. Finally, they are back-projected into 3D and feed into the Weighted Procrustes aligner which estimates the relative pose. ","date":1635721200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1635721200,"objectID":"20546980cf7eb43604ce4d4a67647a59","permalink":"https://marcb.pro/project/gr/","publishdate":"2021-11-01T00:00:00+01:00","relpermalink":"/project/gr/","section":"project","summary":"We present an end-to-end learnable, differentiable method for pairwise relative pose registration of RGB-D frames. Our method is robust to big camera motions thanks to a self-supervised weighting of the predicted correspondences between the frames. Given a pair of frames, our method estimates matches of points and their visibility score. A self-supervised model predicts a confidence weight for visible matches. Finally, visible matches and their weight are fed into a differentiable weighted Procrustes aligner which estimates the rigid transformation between the input frames.","tags":["M.Sc","Computer Vision","Deep Learning"],"title":"Learning Correspondences For Relative Pose Estimation","type":"project"},{"authors":[],"categories":[],"content":"Implementation of the paper ‚ÄúKinect Fusion‚Äù by Newcombe et al. 1 They presented a method for accurate real-time mapping of indoor scenes, using only a low-cost depth camera and graphics hardware.\nThis project is part of the lecture 3D Scanning and Motion Capture (https://www.in.tum.de/cg/teaching/winter-term-2021/3d-scanning-motion-capture/). We implemented this project using C++ and CUDA.\nResults For evaluating our implementation we used TUM‚Äôs RGB-D SLAM Dataset https://vision.in.tum.de/data/datasets/rgbd-dataset.\nSee the final part of the video above to see the results.\nNotes https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/ismar2011.pdf¬†‚Ü©Ô∏é\n","date":1616864212,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1616864212,"objectID":"72a845ba279c371e5a9185a0704f7ece","permalink":"https://marcb.pro/project/kinect-fusion/","publishdate":"2021-03-27T17:56:52+01:00","relpermalink":"/project/kinect-fusion/","section":"project","summary":"Implementation of the paper ‚ÄúKinect Fusion: Real-Time Dense Surface Mapping and Tracking‚Äù","tags":["M.Sc","Computer Vision","3D Reconstruction"],"title":"Kinect Fusion: Dense Surface Mapping and Tracking","type":"project"},{"authors":[],"categories":[],"content":"In this project, I worked on the SLAM pipeline for an autonomous driving vehicle.\nThe tools I used for this project are, ROS, C++, PCL library, Ceres Solver, and Google Cartographer.\nIn addition, I created a ROS package that generates a cost map from a point cloud generated by SLAM. A cost map is a matrix where each cell contains a cost value. This value expresses how likely it is that the cell is occupied by an object. The cost value is also used to express ‚Äúpreferred‚Äù surfaces: for example, asphalt is preferred over grass.\nThe images used belong to https://warp.company/\n","date":1600197102,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1600197102,"objectID":"af4411cc84e390b2ad4cf9110f243aac","permalink":"https://marcb.pro/project/warp/","publishdate":"2020-09-15T20:11:42+01:00","relpermalink":"/project/warp/","section":"project","summary":"In this project, I worked on the SLAM pipeline for an autonomous driving vehicle.\nThe tools I used for this project are, ROS, C++, PCL library, Ceres Solver, and Google Cartographer.","tags":["M.Sc","Computer Vision","3D Reconstruction"],"title":"SLAM for autonomous vehicles","type":"project"},{"authors":[],"categories":[],"content":"In this project, we extended the work of Eisenberger, Zorah, Cremers, ‚ÄúDivergence-Free Shape Interpolation and Correspondence‚Äù 1. In their work, they present a method to calculate deformation fields between shapes embedded in $\\mathbb{R}^D$. To do so, they compute a divergence-free deformation field represented in a coarse-to-fine basis using the Karhunen-Lo√©ve expansion.\nExample of parts of a shape moving in different directions in the same part of the space [1] Our Contribution As stated by the original authors, one of the limitations of their work is in movements where different parts of the shape move through the same region of the embedding space in a contradictory manner. Their method cannot model such deformation because a vector field can only contain a single vector per point in space.\nTo overcome this limitation, Eisenberger suggested using time-dependent vector fields, such that a vector at a given point in space can change over time. For that, we solve correspondence and matching problems for the whole sequence during optimization.\nResults Notes https://arxiv.org/abs/1806.10417¬†‚Ü©Ô∏é\n","date":1588014550,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1588014550,"objectID":"dd59133bf9171110663488389c32beac","permalink":"https://marcb.pro/project/idp/","publishdate":"2020-04-27T20:09:10+01:00","relpermalink":"/project/idp/","section":"project","summary":"In this project, we extended the work of Eisenberger, Zorah, Cremers, ‚ÄúDivergence-Free Shape Interpolation and Correspondence‚Äù 1. In their work, they present a method to calculate deformation fields between shapes embedded in $\\mathbb{R}^D$.","tags":["M.Sc","Shape Analysis","Computer Graphics","Optimization"],"title":"Divergence-Free Shape Correspondence with Time Dependent Vector Fields","type":"project"},{"authors":[],"categories":[],"content":" Bachelor‚Äôs thesis\nBoolean Satisfiability problems (SAT) consists of finding a valid assignment (model) for a set of Boolean variables. It was the first problem proven to be NP-Complete which allowed reducing many NP-Complete problems to it. Because of this, it is one of the pillars of Computer Science.\nAn extension to SAT is Pseud-Boolean optimization problems. Unlike SAT, which can only express binary relationships among variables, Pseudo-Boolean optimization can formalize more complex relationships. These problems are defined in the following manner:\nPseudo-Boolean Optimization formulation. Figure source: MPBO A Distributed Pseudo-Boolean Optimization Solver [1] Example: Knapsack problem Source [2] Given a set of items, each one with a value and a weight, and a knapsack with a maximum capacity, the goal is to select some objects to put inside the knapsack in a way that the weight is not bigger than the knapsack‚Äôs capacity and the total value is maximised.\nThe variables for this problem, given $n$ objects, are: $$o_1, o_2, \\ldots , o_n \\text{for the objects}$$ $$w_1, w_2, \\ldots , w_n \\text{for the weights}$$ $$v_1, v_2, \\ldots , v_n \\text{for the values}$$ There is only one constraint which represent the maximum capacity of the knapsack problem: $$w_0 o_0 + w_1 o_1+ \\ldots w_n o_n \\leq knapsack‚Äôs \\ capacity$$ And the cost function: $$v_0 o_0 + v_1 o_1+ \\ldots v_n o_n $$\nSAT Solvers A SAT solver is a tool that aims at solving Boolean Satisfiability problems. However, they take as input Boolean formulas in Conjunctive Normal Form (CNF). In this project, we propose an efficient encoding for converting Pseudo-Boolean minimisation problems into CNF constraints. If this encoding is not efficient, the size and difficulty of the problem can increase exponentially.\nProposed encoding The proposed encoding is based on the idea that if a function‚Äôs primes cover a small space then a lot of clauses will be required when encoding it into a CNF. For more details see the slides.\nNotes https://www.semanticscholar.org/paper/MPBO-A-Distributed-Pseudo-Boolean-Optimization-Santos-Godinho/52ee5d8996c6f6d5caa43ad35155f404ddc584e3\nhttps://en.wikipedia.org/wiki/Knapsack_problem\n","date":1530039918,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1530039918,"objectID":"b95a0c4e7654a0024e1472a3e8f3dab0","permalink":"https://marcb.pro/project/bachelors-thesis/","publishdate":"2018-06-26T20:05:18+01:00","relpermalink":"/project/bachelors-thesis/","section":"project","summary":"Bachelor‚Äôs thesis\nBoolean Satisfiability problems (SAT) consists of finding a valid assignment (model) for a set of Boolean variables. It was the first problem proven to be NP-Complete which allowed reducing many NP-Complete problems to it.","tags":["B.Sc","Optimization","SAT"],"title":"Design of an environment for solving pseudo-Boolean optimization problems","type":"project"},{"authors":[],"categories":[],"content":" Writing about StirHack16, the first hackathon I ever attended, brings me very good memories. In this page I will focus on the project itself, although some day I should write about the hackathon experience. üòÉ\nAndroid application with Google Maps API interface to help hackathon participants. The app provides the following information: List of upcoming hackathons, their position on Google Maps, and points of interest such as restaurants and hotels around the event.\nFor more information visit the project‚Äôs page on Devpost.\n","date":1455303565,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1455303565,"objectID":"d81ea368fc5a3dbfb64466e4c700ed0e","permalink":"https://marcb.pro/project/hackathon-stirhack-2016/","publishdate":"2016-02-12T19:59:25+01:00","relpermalink":"/project/hackathon-stirhack-2016/","section":"project","summary":"Writing about StirHack16, the first hackathon I ever attended, brings me very good memories. In this page I will focus on the project itself, although some day I should write about the hackathon experience.","tags":["B.Sc","Hackathon","Android","Back-End"],"title":"StirHack 2016","type":"project"}]